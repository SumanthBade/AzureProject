Step-01: Reserving Static Public-IP
az network public-ip create \
  --resource-group mc_rg-azureproject-dev_userregistrationakscluster-dev_eastus \
  --name userreg-ingress-IP \
  --sku Standard \
  --allocation-method Static \
  --location eastus

Step-02: Add and Update the Ingress-NGINX Helm Repo
curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
helm repo update


Step-03: Create namespace
kubectl create ns nginx


Step-03: Installing nginx
helm install new-ingress-nginx ingress-nginx/ingress-nginx \
  --namespace nginx \
  --create-namespace \
  --set controller.image.tag="v1.11.5" \
  --set controller.resources.requests.cpu="25m" \
  --set controller.resources.requests.memory="150Mi" \
  --set controller.resources.limits.cpu="125m" \
  --set controller.resources.limits.memory="200Mi" \
  --set controller.replicaCount=2 \
  --set controller.service.type=LoadBalancer \
  --set controller.service.externalTrafficPolicy=Local \
  --set controller.service.loadBalancerIP="52.168.3.48" \
  --set controller.ingressClass=nginx \
  --set controller.ingressClassResource.name=nginx \
  --set controller.ingressClassResource.enabled=true \
  --set controller.ingressClassResource.default=false


Step-04:Verify Controller is Up
kubectl get pods -n nginx
kubectl get svc -n nginx


2. Ingress Resource for Jenkins
How to access Jenkins without a domain name:
Get your Ingress Controllerâ€™s external IP: kubectl get svc -n nginx

sudo vim user_registration-ingress.yaml

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: userapp-ingress
  namespace: application
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "1024m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60s"
spec:
  ingressClassName: nginx  # <-- Recommended field to specify Ingress controller
  rules:
  - host: userapp.52.168.3.48.nip.io   # Replace <52.168.3.48> with the external IP
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: userregistration
            port:
              number: 3030


kubectl apply -f user_registration-ingress.yaml
